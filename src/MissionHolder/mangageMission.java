/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MissionHolder;

import Main.DatabaseConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MalcolmChen
 */
public class mangageMission extends javax.swing.JFrame {
    private static int itemMission=1000;
    private DatabaseConnect myconnect=new DatabaseConnect("ora_b9j0b","a25724155");
    private Connection con;
    private Statement stmt;
    private ResultSet rs;
    private ResultSet rs2;
    private int id;
    private PreparedStatement pst;
    /**
     * Creates new form mangageMission
     */
    public mangageMission(int id) {
        initComponents();
        this.id=id;
        myconnect.connect();
        con=myconnect.getConnection();
        setcurrentMissionTable();
    }

    public void setcurrentMissionTable(){
        DefaultTableModel item1=(DefaultTableModel)ItemTable1.getModel();
        DefaultTableModel hunter1=(DefaultTableModel) huntingtable1.getModel();
        Object item1data[]=new Object[6];
        try{
            stmt= con.createStatement();
            String imissionQuery="select * from Item_Foraging_Mission where  missionHolderID="+id;
            rs=stmt.executeQuery(imissionQuery);
            while(rs.next()){
                item1data[0]=rs.getInt(1);
                item1data[1]=rs.getInt(2);
                item1data[2]=rs.getString("startTime");
                item1data[3]=rs.getString("deadline");
                item1data[4]=rs.getString("acceptTime");
                int missionid=rs.getInt(1);
                String itemQuery="select ItemId from IMission_has_Item where itemMissionId="+missionid;
                rs2=stmt.executeQuery(itemQuery);
                rs2.next();
                int itemid=rs2.getInt("ItemId");
                String itemNameQuery="select itemName from item where itemID="+itemid;
                rs2=stmt.executeQuery(itemNameQuery);
                rs2.next();
                item1data[5]=rs2.getString(1);
                item1.addRow(item1data);
               
            }
             //for current HunterMission
            String hmissionQuery="select * from Hunting_missions where  missionHolderID="+id;
            ResultSet rs = stmt.executeQuery(hmissionQuery);
            
            while(rs.next()){
                item1data[0]=rs.getInt(1);
                Integer count = null;
                count=rs.getInt(2);
                item1data[1]=count;
                item1data[2]=rs.getString("startTime");
                item1data[3]=rs.getString("deadline");
                item1data[4]=rs.getString("acceptTime");
                int missionid=rs.getInt(1);
                String monsQuery="select monsterid from MMission_has_Monster where huntingMissionId="+missionid;
                rs2=stmt.executeQuery(monsQuery);
                rs2.next();
                int monsid=rs2.getInt("monsterid");
                String itemNameQuery="select name from Monster where monsterid="+monsid;
                rs2=stmt.executeQuery(itemNameQuery);
                rs2.next();
                item1data[5]=rs2.getString(1);
                hunter1.addRow(item1data);
               
            }    
                
           
            
            
        }catch(SQLException err){
            System.out.print(err);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        ItemTable1 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        huntingtable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ItemTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Hunter ID", "Start Time", "Deadline", "Accept Time", "Item"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ItemTable1);

        jTabbedPane1.addTab("Item-Foraging Mission", jScrollPane4);

        huntingtable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Hunter ID", "Start Time", "Deadline", "Accept Time", "Monster"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(huntingtable1);

        jTabbedPane1.addTab("Hunting Mission", jScrollPane7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
  
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ItemTable1;
    private javax.swing.JTable huntingtable1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
